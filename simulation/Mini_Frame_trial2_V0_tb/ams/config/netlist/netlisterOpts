paramGlobalDefVal "0"
dnaAssemblerWaitTime 3600
netlistNoWarn ""
vlogSupply1Sigs ""
includeInstCdfParams nil
shortInstanceList ""
amsmaxErrors "50"
paramDefVals ""
amsLSB_MSB nil
netlistMaxWarn ""
amsScalarInstances t
templateScript ""
emh_macroLibList ""
includeFiles "disciplines.vams userDisciplines.vams"
vlogGroundSigs "gnd!"
upgradeMsgSevWarn ""
useDefparam nil
upgradeMsgSevError ""
termMismatch "ignore"
templateFile ""
print_control_vars t
instClashFormat "%b_instclash"
hnlVerilogTermSyncUp nil
headerText "none"
aliasInstFormat "ams_alias_inst_%i"
initFile ""
preferMEOverImplicit t
createSpectreCktForExtracted nil
unquoteNumbers t
iterInstExpFormat "%b_%i"
allowNameCollisions "yes"
amsTraverseConfigForTextViews t
ossEscNameMapping t
termDirectionMismatch "ignore"
unlPortDrill ""
netClashFormat "%b_netclash"
allowDeviantBuses "yes"
useUselibForSpice nil
emh_maskLayoutView t
amsDefinitionViews "symbol schematic extracted"
useFileUselib t
enablePkgImport nil
amsTempDirForShadows ""
emh_digNetlistFile "digital.v"
amsPortConnectionByNameOrOrder "name"
runNProcForSch nil
allowIllegalIdentifiers "yes"
emh_PrintPwrGndConnectivity nil
dspfFile nil
amsExcludeParams ""
emh_printPhysicalInst nil
ifdefLanguageExtensions nil
useRunDirNetlistsOnly t
updateShadow nil
emh_DigitalInstList nil
allDspfFiles nil
amsExpScalingFactor "no"
emh_printEmptySubckt t
amsVerbose nil
checkForMissingShadows nil
emh_phyCell ""
useSpectreInfo "spectre veriloga spice"
splitNetlistFormat nil
vlogSupply0Sigs ""
modifyParamScope "no"
useEffectiveCDF nil
allowSparseBuses "yes"
globalSignals (("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" ""))
desVarsToBeNetlistedAsInt ""
amsVerilogHonorSmForLeaf nil
forceCleanTempDirForShadow nil
verboseShadowLog nil
