splitNetlistFormat nil
emh_printEmptySubckt t
paramDefVals ""
amsDefinitionViews "symbol schematic extracted"
forceCleanTempDirForShadow nil
templateScript ""
emh_phyCell ""
vlogSupply1Sigs ""
paramGlobalDefVal "0"
includeInstCdfParams nil
updateShadow nil
aliasInstFormat "ams_alias_inst_%i"
useDefparam nil
instClashFormat "%b_instclash"
termMismatch "ignore"
checkForMissingShadows nil
emh_DigitalInstList nil
dspfFile nil
amsExcludeParams ""
vlogGroundSigs "gnd!"
emh_printPhysicalInst nil
netClashFormat "%b_netclash"
includeFiles "disciplines.vams userDisciplines.vams"
amsTempDirForShadows ""
amsLSB_MSB nil
shortInstanceList ""
upgradeMsgSevError ""
upgradeMsgSevWarn ""
useEffectiveCDF nil
netlistNoWarn ""
headerText "none"
emh_macroLibList ""
dnaAssemblerWaitTime 3600
amsScalarInstances t
netlistMaxWarn ""
templateFile ""
initFile ""
allowIllegalIdentifiers "yes"
hnlVerilogTermSyncUp nil
allowDeviantBuses "yes"
desVarsToBeNetlistedAsInt ""
allDspfFiles nil
allowNameCollisions "yes"
print_control_vars t
useSpectreInfo "spectre veriloga spice"
unquoteNumbers t
ossEscNameMapping t
useRunDirNetlistsOnly t
useUselibForSpice nil
enablePkgImport nil
emh_digNetlistFile "digital.v"
iterInstExpFormat "%b_%i"
ifdefLanguageExtensions nil
amsVerbose nil
amsTraverseConfigForTextViews t
runNProcForSch nil
amsExpScalingFactor "no"
allowSparseBuses "yes"
verboseShadowLog nil
emh_PrintPwrGndConnectivity nil
amsPortConnectionByNameOrOrder "name"
createSpectreCktForExtracted nil
vlogSupply0Sigs ""
preferMEOverImplicit t
modifyParamScope "no"
amsVerilogHonorSmForLeaf nil
amsmaxErrors "50"
useFileUselib t
unlPortDrill ""
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" ""))
termDirectionMismatch "ignore"
emh_maskLayoutView t
