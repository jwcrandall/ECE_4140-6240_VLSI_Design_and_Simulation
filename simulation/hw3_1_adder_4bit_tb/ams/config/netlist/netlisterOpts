useEffectiveCDF nil
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" ""))
upgradeMsgSevWarn ""
templateFile ""
dnaAssemblerWaitTime 3600
includeInstCdfParams nil
netlistNoWarn ""
emh_macroLibList ""
allDspfFiles nil
amsLSB_MSB nil
shortInstanceList ""
upgradeMsgSevError ""
headerText "none"
amsScalarInstances t
print_control_vars t
templateScript ""
amsmaxErrors "50"
aliasInstFormat "ams_alias_inst_%i"
vlogSupply1Sigs ""
modifyParamScope "no"
iterInstExpFormat "%b_%i"
amsPortConnectionByNameOrOrder "name"
amsDefinitionViews "symbol schematic extracted"
termDirectionMismatch "ignore"
vlogGroundSigs "gnd!"
netClashFormat "%b_netclash"
useRunDirNetlistsOnly t
instClashFormat "%b_instclash"
ifdefLanguageExtensions nil
amsVerbose nil
verboseShadowLog nil
runNProcForSch nil
amsExpScalingFactor "no"
useDefparam nil
includeFiles "disciplines.vams userDisciplines.vams"
desVarsToBeNetlistedAsInt ""
createSpectreCktForExtracted nil
unlPortDrill ""
paramDefVals ""
amsTempDirForShadows ""
emh_PrintPwrGndConnectivity nil
dspfFile nil
unquoteNumbers t
ossEscNameMapping t
useFileUselib t
preferMEOverImplicit t
paramGlobalDefVal "0"
allowSparseBuses "yes"
amsTraverseConfigForTextViews t
enablePkgImport nil
emh_digNetlistFile "digital.v"
amsVerilogHonorSmForLeaf nil
termMismatch "ignore"
useUselibForSpice nil
vlogSupply0Sigs ""
emh_maskLayoutView t
initFile ""
amsExcludeParams ""
allowDeviantBuses "yes"
emh_printPhysicalInst nil
updateShadow nil
allowNameCollisions "yes"
emh_DigitalInstList nil
checkForMissingShadows nil
allowIllegalIdentifiers "yes"
netlistMaxWarn ""
useSpectreInfo "spectre veriloga spice"
emh_phyCell ""
splitNetlistFormat nil
forceCleanTempDirForShadow nil
emh_printEmptySubckt t
