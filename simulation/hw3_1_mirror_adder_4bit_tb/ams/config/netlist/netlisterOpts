unquoteNumbers t
iterInstExpFormat "%b_%i"
allowSparseBuses "yes"
useFileUselib t
unlPortDrill ""
aliasInstFormat "ams_alias_inst_%i"
instClashFormat "%b_instclash"
ifdefLanguageExtensions nil
amsPortConnectionByNameOrOrder "name"
createSpectreCktForExtracted nil
preferMEOverImplicit t
print_control_vars t
verboseShadowLog nil
useRunDirNetlistsOnly t
amsTraverseConfigForTextViews t
ossEscNameMapping t
amsExpScalingFactor "no"
amsVerilogHonorSmForLeaf nil
termDirectionMismatch "ignore"
modifyParamScope "no"
amsVerbose nil
useUselibForSpice nil
amsTempDirForShadows ""
amsExcludeParams ""
includeInstCdfParams nil
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" ""))
emh_PrintPwrGndConnectivity nil
useEffectiveCDF nil
checkForMissingShadows nil
emh_DigitalInstList nil
allowIllegalIdentifiers "yes"
vlogSupply0Sigs ""
dspfFile nil
netClashFormat "%b_netclash"
allowNameCollisions "yes"
runNProcForSch nil
emh_maskLayoutView t
allDspfFiles nil
enablePkgImport nil
amsDefinitionViews "symbol schematic extracted"
allowDeviantBuses "yes"
emh_digNetlistFile "digital.v"
shortInstanceList ""
emh_phyCell ""
vlogGroundSigs "gnd!"
netlistMaxWarn ""
headerText "none"
emh_macroLibList ""
amsLSB_MSB nil
dnaAssemblerWaitTime 3600
netlistNoWarn ""
amsScalarInstances t
templateFile ""
updateShadow nil
vlogSupply1Sigs ""
emh_printPhysicalInst nil
initFile ""
amsmaxErrors "50"
forceCleanTempDirForShadow nil
emh_printEmptySubckt t
splitNetlistFormat nil
paramDefVals ""
useSpectreInfo "spectre veriloga spice"
paramGlobalDefVal "0"
desVarsToBeNetlistedAsInt ""
hnlVerilogTermSyncUp nil
upgradeMsgSevWarn ""
termMismatch "ignore"
useDefparam nil
upgradeMsgSevError ""
includeFiles "disciplines.vams userDisciplines.vams"
templateScript ""
