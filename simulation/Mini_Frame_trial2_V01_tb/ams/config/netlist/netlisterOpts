dnaAssemblerWaitTime 3600
netlistNoWarn ""
ifdefLanguageExtensions nil
useRunDirNetlistsOnly t
allowSparseBuses "yes"
emh_phyCell ""
netlistMaxWarn ""
emh_macroLibList ""
amsExpScalingFactor "no"
amsScalarInstances t
upgradeMsgSevError ""
amsVerbose nil
modifyParamScope "no"
amsLSB_MSB nil
shortInstanceList ""
upgradeMsgSevWarn ""
termDirectionMismatch "ignore"
allowIllegalIdentifiers "yes"
checkForMissingShadows nil
emh_DigitalInstList nil
amsExcludeParams ""
desVarsToBeNetlistedAsInt ""
amsTempDirForShadows ""
vlogSupply0Sigs ""
hnlVerilogTermSyncUp nil
verboseShadowLog nil
emh_PrintPwrGndConnectivity nil
allowDeviantBuses "yes"
emh_printEmptySubckt t
splitNetlistFormat nil
dspfFile nil
allowNameCollisions "yes"
updateShadow nil
emh_printPhysicalInst nil
allDspfFiles nil
useSpectreInfo "spectre veriloga spice"
forceCleanTempDirForShadow nil
iterInstExpFormat "%b_%i"
useFileUselib t
createSpectreCktForExtracted nil
emh_maskLayoutView t
aliasInstFormat "ams_alias_inst_%i"
amsPortConnectionByNameOrOrder "name"
headerText "none"
unlPortDrill ""
preferMEOverImplicit t
amsVerilogHonorSmForLeaf nil
amsTraverseConfigForTextViews t
enablePkgImport nil
unquoteNumbers t
ossEscNameMapping t
useUselibForSpice nil
initFile ""
globalSignals (("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" ""))
templateFile ""
amsmaxErrors "50"
runNProcForSch nil
emh_digNetlistFile "digital.v"
print_control_vars t
paramDefVals ""
amsDefinitionViews "symbol schematic extracted"
useEffectiveCDF nil
vlogSupply1Sigs ""
paramGlobalDefVal "0"
includeInstCdfParams nil
useDefparam nil
instClashFormat "%b_instclash"
templateScript ""
termMismatch "ignore"
vlogGroundSigs "gnd!"
netClashFormat "%b_netclash"
includeFiles "disciplines.vams userDisciplines.vams"
